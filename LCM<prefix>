//find long common subsequence.
#include<bits/stdc++.h>
using namespace std;
const int N=3e3;
int dp[N][N];
int m,n;
string s,t;

int main()
{
    cin>>s>>t;

    m=s.size();
    n=t.size();
    for(int i=0; i<m; i++)
    {
        dp[i][0]=0;
    }
    for(int j=0; j<n; j++)
    {
        dp[0][j]=0;
    }
    for(int i=1; i<=m; i++)
    {
        for(int j=1; j<=n; j++)
        {
            if(s[i-1]==t[j-1])
            {
                dp[i][j]=1+dp[i-1][j-1];
            }
            else
            {
                dp[i][j] = max(dp[i-1][j], dp[i][j-1]);
            }
        }
    }
    cout<<dp[m][n];
}

